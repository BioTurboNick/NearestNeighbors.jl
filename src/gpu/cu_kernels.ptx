//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19856038
// Cuda compilation tools, release 7.5, V7.5.17
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	_Z15fill_contiguousIdEvPT_mS0_

.visible .func _Z15fill_contiguousIdEvPT_mS0_(
	.param .b64 _Z15fill_contiguousIdEvPT_mS0__param_0,
	.param .b64 _Z15fill_contiguousIdEvPT_mS0__param_1,
	.param .b64 _Z15fill_contiguousIdEvPT_mS0__param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<10>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd4, [_Z15fill_contiguousIdEvPT_mS0__param_0];
	ld.param.u64 	%rd5, [_Z15fill_contiguousIdEvPT_mS0__param_1];
	ld.param.f64 	%fd1, [_Z15fill_contiguousIdEvPT_mS0__param_2];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r9, %r1, %r6, %r7;
	cvt.s64.s32	%rd8, %r9;
	setp.ge.u64	%p1, %rd8, %rd5;
	@%p1 bra 	BB0_3;

	mov.u32 	%r8, %nctaid.x;
	mul.lo.s32 	%r3, %r8, %r1;

BB0_2:
	shl.b64 	%rd6, %rd8, 3;
	add.s64 	%rd7, %rd4, %rd6;
	st.f64 	[%rd7], %fd1;
	add.s32 	%r9, %r3, %r9;
	cvt.s64.s32	%rd8, %r9;
	setp.lt.u64	%p2, %rd8, %rd5;
	@%p2 bra 	BB0_2;

BB0_3:
	ret;
}

	// .globl	_Z15fill_contiguousIfEvPT_mS0_
.visible .func _Z15fill_contiguousIfEvPT_mS0_(
	.param .b64 _Z15fill_contiguousIfEvPT_mS0__param_0,
	.param .b64 _Z15fill_contiguousIfEvPT_mS0__param_1,
	.param .b32 _Z15fill_contiguousIfEvPT_mS0__param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd4, [_Z15fill_contiguousIfEvPT_mS0__param_0];
	ld.param.u64 	%rd5, [_Z15fill_contiguousIfEvPT_mS0__param_1];
	ld.param.f32 	%f1, [_Z15fill_contiguousIfEvPT_mS0__param_2];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r9, %r1, %r6, %r7;
	cvt.s64.s32	%rd8, %r9;
	setp.ge.u64	%p1, %rd8, %rd5;
	@%p1 bra 	BB1_3;

	mov.u32 	%r8, %nctaid.x;
	mul.lo.s32 	%r3, %r8, %r1;

BB1_2:
	shl.b64 	%rd6, %rd8, 2;
	add.s64 	%rd7, %rd4, %rd6;
	st.f32 	[%rd7], %f1;
	add.s32 	%r9, %r3, %r9;
	cvt.s64.s32	%rd8, %r9;
	setp.lt.u64	%p2, %rd8, %rd5;
	@%p2 bra 	BB1_2;

BB1_3:
	ret;
}

	// .globl	_Z14colsumsq_pitchIdEvPT_mmmS1_
.visible .func _Z14colsumsq_pitchIdEvPT_mmmS1_(
	.param .b64 _Z14colsumsq_pitchIdEvPT_mmmS1__param_0,
	.param .b64 _Z14colsumsq_pitchIdEvPT_mmmS1__param_1,
	.param .b64 _Z14colsumsq_pitchIdEvPT_mmmS1__param_2,
	.param .b64 _Z14colsumsq_pitchIdEvPT_mmmS1__param_3,
	.param .b64 _Z14colsumsq_pitchIdEvPT_mmmS1__param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd8, [_Z14colsumsq_pitchIdEvPT_mmmS1__param_0];
	ld.param.u64 	%rd12, [_Z14colsumsq_pitchIdEvPT_mmmS1__param_1];
	ld.param.u64 	%rd9, [_Z14colsumsq_pitchIdEvPT_mmmS1__param_2];
	ld.param.u64 	%rd10, [_Z14colsumsq_pitchIdEvPT_mmmS1__param_3];
	ld.param.u64 	%rd11, [_Z14colsumsq_pitchIdEvPT_mmmS1__param_4];
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	cvt.s64.s32	%rd1, %r4;
	setp.ge.u64	%p1, %rd1, %rd12;
	@%p1 bra 	BB2_5;

	setp.eq.s64	%p2, %rd9, 0;
	mov.f64 	%fd7, 0d0000000000000000;
	@%p2 bra 	BB2_4;

	mul.wide.s32 	%rd14, %r4, 8;
	add.s64 	%rd18, %rd8, %rd14;
	shl.b64 	%rd3, %rd10, 3;
	mov.f64 	%fd7, 0d0000000000000000;
	mov.u64 	%rd17, 0;

BB2_3:
	ld.f64 	%fd6, [%rd18];
	fma.rn.f64 	%fd7, %fd6, %fd6, %fd7;
	add.s64 	%rd18, %rd18, %rd3;
	add.s64 	%rd17, %rd17, 1;
	setp.lt.u64	%p3, %rd17, %rd9;
	@%p3 bra 	BB2_3;

BB2_4:
	shl.b64 	%rd15, %rd1, 3;
	add.s64 	%rd16, %rd11, %rd15;
	st.f64 	[%rd16], %fd7;

BB2_5:
	ret;
}

	// .globl	_Z14colsumsq_pitchIfEvPT_mmmS1_
.visible .func _Z14colsumsq_pitchIfEvPT_mmmS1_(
	.param .b64 _Z14colsumsq_pitchIfEvPT_mmmS1__param_0,
	.param .b64 _Z14colsumsq_pitchIfEvPT_mmmS1__param_1,
	.param .b64 _Z14colsumsq_pitchIfEvPT_mmmS1__param_2,
	.param .b64 _Z14colsumsq_pitchIfEvPT_mmmS1__param_3,
	.param .b64 _Z14colsumsq_pitchIfEvPT_mmmS1__param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd8, [_Z14colsumsq_pitchIfEvPT_mmmS1__param_0];
	ld.param.u64 	%rd12, [_Z14colsumsq_pitchIfEvPT_mmmS1__param_1];
	ld.param.u64 	%rd9, [_Z14colsumsq_pitchIfEvPT_mmmS1__param_2];
	ld.param.u64 	%rd10, [_Z14colsumsq_pitchIfEvPT_mmmS1__param_3];
	ld.param.u64 	%rd11, [_Z14colsumsq_pitchIfEvPT_mmmS1__param_4];
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	cvt.s64.s32	%rd1, %r4;
	setp.ge.u64	%p1, %rd1, %rd12;
	@%p1 bra 	BB3_5;

	setp.eq.s64	%p2, %rd9, 0;
	mov.f32 	%f7, 0f00000000;
	@%p2 bra 	BB3_4;

	mul.wide.s32 	%rd14, %r4, 4;
	add.s64 	%rd18, %rd8, %rd14;
	shl.b64 	%rd3, %rd10, 2;
	mov.f32 	%f7, 0f00000000;
	mov.u64 	%rd17, 0;

BB3_3:
	ld.f32 	%f6, [%rd18];
	fma.rn.f32 	%f7, %f6, %f6, %f7;
	add.s64 	%rd18, %rd18, %rd3;
	add.s64 	%rd17, %rd17, 1;
	setp.lt.u64	%p3, %rd17, %rd9;
	@%p3 bra 	BB3_3;

BB3_4:
	shl.b64 	%rd15, %rd1, 2;
	add.s64 	%rd16, %rd11, %rd15;
	st.f32 	[%rd16], %f7;

BB3_5:
	ret;
}

	// .globl	fill_contiguous_double
.visible .entry fill_contiguous_double(
	.param .u64 fill_contiguous_double_param_0,
	.param .u64 fill_contiguous_double_param_1,
	.param .f64 fill_contiguous_double_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<10>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd5, [fill_contiguous_double_param_0];
	ld.param.u64 	%rd6, [fill_contiguous_double_param_1];
	ld.param.f64 	%fd1, [fill_contiguous_double_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r9, %r1, %r6, %r7;
	cvt.s64.s32	%rd9, %r9;
	setp.ge.u64	%p1, %rd9, %rd6;
	@%p1 bra 	BB4_3;

	cvta.to.global.u64 	%rd2, %rd5;
	mov.u32 	%r8, %nctaid.x;
	mul.lo.s32 	%r3, %r8, %r1;

BB4_2:
	shl.b64 	%rd7, %rd9, 3;
	add.s64 	%rd8, %rd2, %rd7;
	st.global.f64 	[%rd8], %fd1;
	add.s32 	%r9, %r3, %r9;
	cvt.s64.s32	%rd9, %r9;
	setp.lt.u64	%p2, %rd9, %rd6;
	@%p2 bra 	BB4_2;

BB4_3:
	ret;
}

	// .globl	fill_contiguous_float
.visible .entry fill_contiguous_float(
	.param .u64 fill_contiguous_float_param_0,
	.param .u64 fill_contiguous_float_param_1,
	.param .f32 fill_contiguous_float_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd5, [fill_contiguous_float_param_0];
	ld.param.u64 	%rd6, [fill_contiguous_float_param_1];
	ld.param.f32 	%f1, [fill_contiguous_float_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r9, %r1, %r6, %r7;
	cvt.s64.s32	%rd9, %r9;
	setp.ge.u64	%p1, %rd9, %rd6;
	@%p1 bra 	BB5_3;

	cvta.to.global.u64 	%rd2, %rd5;
	mov.u32 	%r8, %nctaid.x;
	mul.lo.s32 	%r3, %r8, %r1;

BB5_2:
	shl.b64 	%rd7, %rd9, 2;
	add.s64 	%rd8, %rd2, %rd7;
	st.global.f32 	[%rd8], %f1;
	add.s32 	%r9, %r3, %r9;
	cvt.s64.s32	%rd9, %r9;
	setp.lt.u64	%p2, %rd9, %rd6;
	@%p2 bra 	BB5_2;

BB5_3:
	ret;
}

	// .globl	colsumsq_double
.visible .entry colsumsq_double(
	.param .u64 colsumsq_double_param_0,
	.param .u64 colsumsq_double_param_1,
	.param .u64 colsumsq_double_param_2,
	.param .u64 colsumsq_double_param_3,
	.param .u64 colsumsq_double_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<21>;


	ld.param.u64 	%rd8, [colsumsq_double_param_0];
	ld.param.u64 	%rd12, [colsumsq_double_param_1];
	ld.param.u64 	%rd9, [colsumsq_double_param_2];
	ld.param.u64 	%rd10, [colsumsq_double_param_3];
	ld.param.u64 	%rd11, [colsumsq_double_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r1, %r2, %r3;
	cvt.s64.s32	%rd1, %r4;
	setp.ge.u64	%p1, %rd1, %rd12;
	@%p1 bra 	BB6_5;

	setp.eq.s64	%p2, %rd9, 0;
	mov.f64 	%fd7, 0d0000000000000000;
	@%p2 bra 	BB6_4;

	cvta.to.global.u64 	%rd14, %rd8;
	mul.wide.s32 	%rd15, %r4, 8;
	add.s64 	%rd20, %rd14, %rd15;
	shl.b64 	%rd3, %rd10, 3;
	mov.f64 	%fd7, 0d0000000000000000;
	mov.u64 	%rd19, 0;

BB6_3:
	ld.global.f64 	%fd6, [%rd20];
	fma.rn.f64 	%fd7, %fd6, %fd6, %fd7;
	add.s64 	%rd20, %rd20, %rd3;
	add.s64 	%rd19, %rd19, 1;
	setp.lt.u64	%p3, %rd19, %rd9;
	@%p3 bra 	BB6_3;

BB6_4:
	cvta.to.global.u64 	%rd16, %rd11;
	shl.b64 	%rd17, %rd1, 3;
	add.s64 	%rd18, %rd16, %rd17;
	st.global.f64 	[%rd18], %fd7;

BB6_5:
	ret;
}

	// .globl	colsumsq_float
.visible .entry colsumsq_float(
	.param .u64 colsumsq_float_param_0,
	.param .u64 colsumsq_float_param_1,
	.param .u64 colsumsq_float_param_2,
	.param .u64 colsumsq_float_param_3,
	.param .u64 colsumsq_float_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<21>;


	ld.param.u64 	%rd8, [colsumsq_float_param_0];
	ld.param.u64 	%rd12, [colsumsq_float_param_1];
	ld.param.u64 	%rd9, [colsumsq_float_param_2];
	ld.param.u64 	%rd10, [colsumsq_float_param_3];
	ld.param.u64 	%rd11, [colsumsq_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r1, %r2, %r3;
	cvt.s64.s32	%rd1, %r4;
	setp.ge.u64	%p1, %rd1, %rd12;
	@%p1 bra 	BB7_5;

	setp.eq.s64	%p2, %rd9, 0;
	mov.f32 	%f7, 0f00000000;
	@%p2 bra 	BB7_4;

	cvta.to.global.u64 	%rd14, %rd8;
	mul.wide.s32 	%rd15, %r4, 4;
	add.s64 	%rd20, %rd14, %rd15;
	shl.b64 	%rd3, %rd10, 2;
	mov.f32 	%f7, 0f00000000;
	mov.u64 	%rd19, 0;

BB7_3:
	ld.global.f32 	%f6, [%rd20];
	fma.rn.f32 	%f7, %f6, %f6, %f7;
	add.s64 	%rd20, %rd20, %rd3;
	add.s64 	%rd19, %rd19, 1;
	setp.lt.u64	%p3, %rd19, %rd9;
	@%p3 bra 	BB7_3;

BB7_4:
	cvta.to.global.u64 	%rd16, %rd11;
	shl.b64 	%rd17, %rd1, 2;
	add.s64 	%rd18, %rd16, %rd17;
	st.global.f32 	[%rd18], %f7;

BB7_5:
	ret;
}


